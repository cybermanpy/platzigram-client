{"version":3,"sources":["client-test.js"],"names":["test","require","nock","platzigram","fixtures","options","endpoints","pictures","users","auth","beforeEach","t","context","client","createClient","is","getPicture","savePicture","likePicture","listPictures","listPicturesByTag","saveUser","getUser","image","getImage","get","publicId","replay","result","deepEqual"],"mappings":"AAAA;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,aAAaF,QAAQ,KAAR,CAAnB;AACA,MAAMG,WAAWH,QAAQ,YAAR,CAAjB;;AAEA,IAAII,UAAU;AACZC,aAAW;AACTC,cAAU,gCADD;AAETC,WAAO,6BAFE;AAGTC,UAAM;AAHG;AADC,CAAd;;AAQAT,KAAKU,UAAL,CAAgBC,KAAK;AACnBA,IAAEC,OAAF,CAAUC,MAAV,GAAmBV,WAAWW,YAAX,CAAwBT,OAAxB,CAAnB;AACD,CAFD;;AAIAL,KAAK,QAAL,EAAeW,KAAK;AAClB,QAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;;AAEAF,IAAEI,EAAF,CAAK,OAAOF,OAAOG,UAAnB,EAA+B,UAA/B;AACAL,IAAEI,EAAF,CAAK,OAAOF,OAAOI,WAAnB,EAAgC,UAAhC;AACAN,IAAEI,EAAF,CAAK,OAAOF,OAAOK,WAAnB,EAAgC,UAAhC;AACAP,IAAEI,EAAF,CAAK,OAAOF,OAAOM,YAAnB,EAAiC,UAAjC;AACAR,IAAEI,EAAF,CAAK,OAAOF,OAAOO,iBAAnB,EAAsC,UAAtC;AACAT,IAAEI,EAAF,CAAK,OAAOF,OAAOQ,QAAnB,EAA6B,UAA7B;AACAV,IAAEI,EAAF,CAAK,OAAOF,OAAOS,OAAnB,EAA4B,UAA5B;AACAX,IAAEI,EAAF,CAAK,OAAOF,OAAOJ,IAAnB,EAAyB,UAAzB;AACD,CAXD;;AAaAT,KAAK,YAAL;AAAA,+BAAmB,WAAMW,CAAN,EAAW;AAC5B,UAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;;AAEA,QAAIU,QAAQnB,SAASoB,QAAT,EAAZ;;AAEAtB,SAAKG,QAAQC,SAAR,CAAkBC,QAAvB,EACGkB,GADH,CACQ,IAAGF,MAAMG,QAAS,EAD1B,EAC6BC,MAD7B,CACoC,GADpC,EACyCJ,KADzC;;AAGA,QAAIK,SAAS,MAAMf,OAAOG,UAAP,CAAkBO,MAAMG,QAAxB,CAAnB;;AAEAf,MAAEkB,SAAF,CAAYN,KAAZ,EAAmBK,MAAnB;AACD,GAXD;;AAAA;AAAA;AAAA;AAAA","file":"client-test.js","sourcesContent":["'use strict'\r\n\r\nconst test = require('ava')\r\nconst nock = require('nock')\r\nconst platzigram = require('../')\r\nconst fixtures = require('./fixtures')\r\n\r\nlet options = {\r\n  endpoints: {\r\n    pictures: 'http://platzigram.test/picture',\r\n    users: 'http://platzigram.test/user',\r\n    auth: 'http://platzigram.test/auth'\r\n  }\r\n}\r\n\r\ntest.beforeEach(t => {\r\n  t.context.client = platzigram.createClient(options)\r\n})\r\n\r\ntest('client', t => {\r\n  const client = t.context.client\r\n\r\n  t.is(typeof client.getPicture, 'function')\r\n  t.is(typeof client.savePicture, 'function')\r\n  t.is(typeof client.likePicture, 'function')\r\n  t.is(typeof client.listPictures, 'function')\r\n  t.is(typeof client.listPicturesByTag, 'function')\r\n  t.is(typeof client.saveUser, 'function')\r\n  t.is(typeof client.getUser, 'function')\r\n  t.is(typeof client.auth, 'function')\r\n})\r\n\r\ntest('getPicture', async t => {\r\n  const client = t.context.client\r\n\r\n  let image = fixtures.getImage()\r\n\r\n  nock(options.endpoints.pictures)\r\n    .get(`/${image.publicId}`).replay(200, image)\r\n\r\n  let result = await client.getPicture(image.publicId)\r\n\r\n  t.deepEqual(image, result)\r\n})\r\n"]}